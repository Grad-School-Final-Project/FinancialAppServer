plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'jacoco'
    id "io.freefair.lombok" version "6.5.0.3"
    id "com.palantir.docker" version "0.22.1"
}

group = 'com.jared'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.2'
    implementation group: 'javax.money', name: 'money-api', version: '1.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation group: 'org.keycloak', name: 'keycloak-spring-boot-starter', version: '19.0.1'
    implementation group: 'org.keycloak', name: 'keycloak-admin-client', version: '19.0.1'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.11'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.4.2'
    implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.6.10.Final'
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.7.0'
    implementation group: 'org.json', name: 'json', version: '20220924'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jar {
    enabled = false
    manifest {
        attributes(
                'Main-Class': 'com.jared.financialappserver.FinancialAppServerApplication'
        )
    }
}

